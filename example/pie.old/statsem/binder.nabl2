module statsem/binder

imports

  signatures/-

rules // Binders

  Binder [[ SingleBinder(bind) ^ (s, ty_exp) ]] :=
    Bind [[ bind ^ (s, ty_exp) ]].

  Binder [[ t@TupleBinder(binds) ^ (s, ty_exp) ]] :=
    ty_exp == TupleTy(tys_exp) | error $[Type mismatch: expected tuple type, got [ty_exp]] @ t,
    Binds [[ binds ^ (s, tys_exp) ]].


  Bind [[ Bind(id_var) ^ (s, ty_exp) ]] :=
     Var{id_var} <- s,
     Var{id_var}.kind := LocalVarKind() !,
     Var{id_var} : ty_exp !.

  Bind [[ TBind(id_var, ty_expected) ^ (s, ty_exp) ]] :=
     Var{id_var} <- s,
     Var{id_var}.kind := LocalVarKind() !,
     [[ ty_expected ^ (s) : ty_expected_bound ]],
     ty_exp <? ty_expected_bound | error $[Type mismatch: expected [ty_expected_bound], got [ty_exp]] @ ty_expected,
     Var{id_var} : ty_expected_bound !.


  Binds [[ t@[bind|binds] ^ (s, tys_exp) ]] :=
    tys_exp == [ty|tys] | error $[Inconsistent number of bindings] @ t,
    Bind [[ bind ^ (s, ty) ]],
    Binds [[ binds ^ (s, tys) ]].

  Binds [[ t@[] ^ (s, tys_exp) ]] :=
    tys_exp == [] | error $[Inconsistent number of bindings] @ t.
