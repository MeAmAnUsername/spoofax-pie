module mb:tiger:spoofax:task:reusable


data CompletionResult = foreign java mb.completions.common.CompletionResult {}
data Term = foreign java org.spoofax.interpreter.terms.IStrategoTerm {}

// todo: move to separate files
//import mb:common:style:styleNameFromString
//import mb:common:util:createEmptyListView
//import mb:completions:common:{CompletionResult, createCompletionResult, createCompletionProposal}
//import mb:spoofax:common:IStrategoTerm as Term

func TigerCompleteTaskDef(astProvider: supplier<Term?>) -> CompletionResult? = {
  val maybeAst = (astProvider.get<>());
  if (maybeAst == null)
    return null;
  null // todo
//  val ast = maybeAst!;
//  createCompletionResult(listViewOf(
//    createCompletionProposal("mypackage", "description", "", "", "mypackage", styleNameFromString("meta.package")!, createEmptyListView(), false),
//    createCompletionProposal("myclass", "description", "", "T", "mypackage", styleNameFromString("meta.class")!, createEmptyListView(), false)
//  ), true);
}
