module mb:tiger:spoofax:task:reusable

import mb:common:style:{StyleName, styleNameFromString}
import mb:common:util:{ListView, createEmptyListView}
import mb:completions:common:{CompletionProposal, createCompletionProposal, CompletionResult, createCompletionResult}
import org:spoofax:interpreter:terms:IStrategoTerm as Term

func listViewOf(proposals: CompletionProposal*) -> ListView = foreign java mb.common.util.ListView#of

func TigerCompleteTaskDef(astProvider: supplier<Term?>) -> CompletionResult? = {
  val maybeAst = (astProvider.get<>());
  if (maybeAst == null)
    return null;
  createCompletionResult(listViewOf([
    createCompletionProposal("mypackage", "description", "", "", "mypackage", styleNameFromString("meta.package")!, createEmptyListView(), false),
    createCompletionProposal("myclass", "description", "", "T", "mypackage", styleNameFromString("meta.class")!, createEmptyListView(), false)
  ]), true)
}
